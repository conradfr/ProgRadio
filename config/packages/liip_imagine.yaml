#liip_imagine:
#    # valid drivers options include "gd" or "gmagick" or "imagick"
#    driver: "gd"
#
#    # define your filter sets under this option
#    filter_sets:
#
#        # an example thumbnail transformation definition
#        # https://symfony.com/doc/current/bundles/LiipImagineBundle/basic-usage.html#create-thumbnails
#        squared_thumbnail:
#
#            # set your image quality defaults
#            jpeg_quality:          85
#            png_compression_level: 8
#
#            # setup the filter steps to apply for this transformation
#            filters:
#
#                # auto rotate the image using EXIF metadata
#                auto_rotate: ~
#
#                # strip the image of all metadata
#                strip: ~
#
#                # scale and square the image to the given dimensions
#                thumbnail:
#                    size:          [253, 253]
#                    mode:          outbound
#                    allow_upscale: true
#
#                # create border by placing image on larger black background
#                background:
#                    size:     [256, 256]
#                    position: center
#                    color:    '#fff'

liip_imagine:
    driver: "gd"
    resolvers:
        default:
            web_path: ~

    # your filter sets are defined here
    filter_sets:
        # use the default cache configuration
        cache: ~
        program_thumb:
            filters:
                relative_resize:
                    heighten: 58
            post_processors:
                jpegoptim: { strip_all: true, max: 85, progressive: true }
                # optipng: { strip_all: true, level: 6 }
        page_thumb:
            filters:
                relative_resize:
                    widen: 64
            post_processors:
                jpegoptim: { strip_all: true, max: 95, progressive: true }
                # optipng: { strip_all: true, level: 5 }
        notification_thumb:
            filters:
                downscale:
                    max: [1024, 512]
            post_processors:
                jpegoptim: { strip_all: true, max: 95, progressive: false }
                # optipng: { strip_all: true, level: 5 }
